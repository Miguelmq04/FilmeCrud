package Forms;

import Entities.DadosFilme;
import Entities.MetodosDAO;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 * Essa classe é responsavel pela tabela de filmes e dos métodos `preencherComboCategoria`, `preencherTabela` e das ações de excluir e editar 
 * um filme.
 * 
 * @author quart
 */
public class TabelaFilmes extends javax.swing.JFrame {

    private void preencherComboCategoria(){
        MetodosDAO metodosDao = new MetodosDAO();
        metodosDao. conectarDB();
        List<DadosFilme> lista = metodosDao.GetFilmes();
        
        Set<String> categoria = new HashSet<>();
        
        for(DadosFilme filmeCategoria : lista){
            categoria.add(filmeCategoria.getCategoria());
        }
        
        cmbCategoria.removeAllItems();
        cmbCategoria.addItem("Todos"); 
        for(String categorias : categoria){
            cmbCategoria.addItem(categorias);
        }
    }
    
    public void preencherTabela(){
        MetodosDAO metodosDao = new MetodosDAO();
        metodosDao.conectarDB();
        
        List<DadosFilme> listaFilme = metodosDao.GetFilmes();
        
        DefaultTableModel tableModel = (DefaultTableModel) tblFilmes.getModel();
        
        for(DadosFilme dados : listaFilme){
            
            Object[] obj = new Object[]{
                dados.getId(),
                dados.getNome(),
                dados.getData(),
                dados.getCategoria(),
            };
            tableModel.addRow(obj);
        }
        tblFilmes.setModel(tableModel);
    }
    
    /**
     * Construtor da classe TabelaFilmes. 
     * Inicializa os componetes gráficos da interface da tabela de filmes e preenche a tabela com os filmes registrados e popula o comboBox com 
     * categoria.
     */
    public TabelaFilmes() {
        initComponents();
        preencherTabela();
        preencherComboCategoria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFilmes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cmbCategoria = new javax.swing.JComboBox();
        btnExcluir = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tabela de Filmes");

        tblFilmes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblFilmes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Filme", "Data de Lançamento", "Categoria"
            }
        ));
        jScrollPane1.setViewportView(tblFilmes);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Buscar Filme por categoria:");

        cmbCategoria.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos" }));
        cmbCategoria.setToolTipText("Serão exibidos apenas filmes da categoria selecionada.");
        cmbCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoriaActionPerformed(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(255, 0, 0));
        btnExcluir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir)
                    .addComponent(btnEditar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Atualiza a tabela com somente filmes da categoria especificada.
     * 
     * Este método é executado quando o usuario seleciona uma categoria na JComboBox. ele chama o `GetFilmesCategoria` para buscar todos os filmes
     * da categoria selecionada, ou se a categoria for `todos`, todos os filmes são mostrados. e serão exibidos na tabela. 
     * 
     * @param evt Evento de botão gerado quando o usuário altera a seleção da JComboBox
     */
    private void cmbCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoriaActionPerformed
        MetodosDAO metodoDao = new MetodosDAO();
        metodoDao.conectarDB();
        
        String categoriaSelecionada = String.valueOf(cmbCategoria.getSelectedItem());
        
        List<DadosFilme> listaCategoria = metodoDao.GetFilmesCategoria(categoriaSelecionada);
        if("Todos".equals(categoriaSelecionada)){
            listaCategoria = metodoDao.GetFilmes();
        }
        
        DefaultTableModel tableModel = (DefaultTableModel) tblFilmes.getModel();
        tableModel.setRowCount(0);
        
        for(DadosFilme c : listaCategoria){
            Object[] obj = new Object[]{
                c.getId(),
                c.getNome(),
                c.getData(),
                c.getCategoria(),
            };
            tableModel.addRow(obj);
        }
        tblFilmes.setModel(tableModel);
    }//GEN-LAST:event_cmbCategoriaActionPerformed

    /**
     * Esse é o evento de exclução de um filme na tabela.
     * 
     * Este metodo é executado quando o usuário clica no botão de excluir, ele verifica se a uma linha selecionada, recuperando o id do 
     * filme selecionado, e chama o metodo `Excluir` para remover o filme do banco de dados. depois da Remoção do Filme, a linha é removida 
     * da tabela.
     * 
     * @param evt A ação é gerada quando o usuário clica no botão `Excluir`.
     */
    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        MetodosDAO metodosDAO = new MetodosDAO();
        metodosDAO.conectarDB();
        
        try{
            int linhaSelecionada = tblFilmes.getSelectedRow();
            if(linhaSelecionada != -1){
              int id = (int) tblFilmes.getValueAt(linhaSelecionada, 0);
              metodosDAO.Excluir(id);
                
              DefaultTableModel tableModel = (DefaultTableModel) tblFilmes.getModel();
              tableModel.removeRow(linhaSelecionada);
                
              JOptionPane.showMessageDialog(null, "Filme excluido.");
              
              metodosDAO.DesconectarDB();
           }
           else{
              JOptionPane.showMessageDialog(null, "Selecione um filme para excluir");
           }
        }
        catch(Exception e){
             JOptionPane.showMessageDialog(null, "Ocorreu um erro ao excluir o filme " + e.getMessage() + ", tente novamente.");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * Esse é o evento de editação de um filme.
     * 
     * Este método é executado quando o usuário clica no botão,Editar ele recupera os dados do filme selecionado e preenche no formulário de
     * Edição. Depois, o formulário de edição é exibido para o usuário.
     * 
     * @param evt A ação é gerada quando o usuário clica no botão `Editar`.
     */
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        EditarFilme editarFilme = new EditarFilme();
        
        DateTimeFormatter dataFormatada = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        
        int linhaSelecionada = tblFilmes.getSelectedRow();
        
        MetodosDAO metodosDAO = new MetodosDAO();
        metodosDAO.conectarDB();
        
        if(linhaSelecionada != -1){
           
            int idFilme = Integer.parseInt(tblFilmes.getValueAt(linhaSelecionada, 0).toString());
            
            String nomeFilme = tblFilmes.getValueAt(linhaSelecionada, 1).toString();
            String dataTexto = tblFilmes.getValueAt(linhaSelecionada, 2).toString();
            LocalDate dataConvertida = LocalDate.parse(dataTexto);
            String categoriaFilme = tblFilmes.getValueAt(linhaSelecionada, 3).toString();
            
            String dataFilme = dataConvertida.format(dataFormatada);
            
            editarFilme.setIdFilme(idFilme);
            editarFilme.txtNomeFilmeEditado.setText(nomeFilme);
            editarFilme.txtDataLancamentoEditado.setText(dataFilme);
            editarFilme.txtCategoriaEditado.setText(categoriaFilme);
            
            editarFilme.setVisible(true);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabelaFilmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabelaFilmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabelaFilmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabelaFilmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TabelaFilmes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JComboBox cmbCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JTable tblFilmes;
    // End of variables declaration//GEN-END:variables

}
